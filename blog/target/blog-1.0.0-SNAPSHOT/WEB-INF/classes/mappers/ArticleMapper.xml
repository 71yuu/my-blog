<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuu.blog.dao.ArticleMapper">
    <sql id="tb">article</sql>

    <sql id="Base_Column_List">
    article_id, article_user_id, article_title, article_html, article_content, article_view_count, article_comment_count, article_like_count, article_create_time,
    article_update_time, article_is_comment, article_status
    </sql>

    <!-- 获取最新的文章 -->
    <select id="listArticle" resultType="com.yuu.blog.pojo.Article">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="tb"/>
        order by article_id desc
    </select>

    <!-- 有条件的获取文章 -->
    <select id="findAll" parameterType="map" resultType="Article">
        SELECT
        article.*
        FROM
        article
        <where>
            <if test="status != null">
                article.article_status = #{status} AND
            </if>
            <if test="keywords != null">
                article.article_title LIKE concat(concat('%',#{keywords}),'%') AND
            </if>
            <if test="userId != null">
                article.article_user_id = #{userId} AND
            </if>
            <if test="categoryId != null">
                article.article_id IN (
                SELECT article_category_ref.article_id FROM article_category_ref
                WHERE article_category_ref.category_id = #{categoryId}
                ) AND
            </if>
            <if test="tagId != null">
                article.article_id IN (
                SELECT article_tag_ref.article_id FROM article_tag_ref
                WHERE article_tag_ref.tag_id = #{tagId}
                ) AND
            </if>
            1 = 1
        </where>
        ORDER BY article.article_id DESC
    </select>

    <!-- 获取已发布的文章 -->
    <select id="getArticleByStatusAndId" resultType="Article" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        <where>
            <if test="status != null">
                article_status = #{status} AND
            </if>
            article_id = #{id}
        </where>
    </select>

    <!-- 获取文章总数 -->
    <select id="countArticle" resultType="Integer">
        SELECT COUNT(*) FROM
        <include refid="tb"/>
        WHERE article_status = 1
    </select>


    <!-- 获取文章查看总数 -->
    <select id="countArticleView" resultType="int">
        select IFNULL(sum(article_view_count), 0)
        from article
        where article_status = 1
    </select>

    <!-- 添加新文章 -->
    <insert id="insert" parameterType="Article" useGeneratedKeys="true" keyProperty="articleId">
        insert into <include refid="tb"/>
        (article_user_id, article_title,
        article_create_time, article_update_time,
        article_is_comment, article_status, article_html, article_content)
        values (#{articleUserId}, #{articleTitle},
        now(),now(),
        #{articleIsComment}, #{articleStatus}, #{articleHtml}, #{articleContent})
    </insert>

    <!-- 获取最近更新的文章 -->
    <select id="newArticleList" resultType="Article">
        select <include refid="Base_Column_List"/>
        from <include refid="tb"/>
        order by article_id desc limit #{limit}
    </select>

    <!-- 删除文章 -->
    <delete id="deleteById" parameterType="int">
        DELETE FROM
        <include refid="tb" />
        WHERE article_id = #{articleId}
    </delete>

    <!-- 修改文章 -->
    <update id="update" parameterType="Article">
        update
        <include refid="tb"/>
        <set>
            <if test="articleUserId != null">article_user_id = #{articleUserId},</if>
            <if test="articleTitle != null">article_title = #{articleTitle},</if>
            <if test="articleViewCount != null">article_view_count = #{articleViewCount},</if>
            <if test="articleCommentCount != null">article_comment_count = #{articleCommentCount},</if>
            <if test="articleLikeCount != null">article_like_count = #{articleLikeCount},</if>
            <if test="articleCreateTime != null">article_create_time = #{articleCreateTime},</if>
            <if test="articleUpdateTime != null">article_update_time = #{articleUpdateTime},</if>
            <if test="articleIsComment != null">article_is_comment = #{articleIsComment},</if>
            <if test="articleStatus != null">article_status = #{articleStatus},</if>
            <if test="articleHtml != null">article_html = #{articleHtml},</if>
            <if test="articleContent != null">article_content = #{articleContent},</if>
        </set>
          where article_id = #{articleId}
    </update>

    <!-- 更新文章评论数 -->
    <update id="updateCommentCount" parameterType="int">
        update <include refid="tb"/>
        set article_comment_count =
        (
          select count(*) from comment
          where article.article_id = comment.comment_article_id
        )
        where article_id = #{articleId}
    </update>


    <!-- 获取最后更新的文章 -->
    <select id="lastUpdateArticle" resultType="Article">
        select <include refid="Base_Column_List"/>
        from <include refid="tb"/>
        where
        article_status = 1 AND article_update_time = (
          select max(article_update_time) from article
        )
    </select>

    <!-- 根据分类 ID 集合查找文章 -->
    <select id="findArticleByCategoryIds" resultType="Article">
        select
        article.article_id, article.article_user_id, article.article_title,
        article.article_view_count, article.article_comment_count,
        article.article_like_count, article.article_create_time, article.article_update_time,
        article.article_is_comment, article.article_status,
        article.article_content
        FROM article, article_category_ref
        <where>
            article.article_status = 1 AND
            article.article_id = article_category_ref.article_id AND
            article_category_ref.category_id
            <if test="categoryIds != null">
                IN
                <foreach collection="categoryIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
        </where>
        limit #{limit}
    </select>

    <!-- 查看数量最多的文章 -->
    <select id="listArticleByViewCount" resultType="Article">
        select <include refid="Base_Column_List"/>
        from <include refid="tb"/>
        where article_status = 1
        order by article_view_count desc, article_id desc
        limit #{limit}
    </select>

    <!-- 获取下一篇文章 -->
    <select id="getAfterArticle" parameterType="int" resultType="Article">
        select <include refid="Base_Column_List"/>
        from <include refid="tb"/>
        <where>
            article_id > #{articleId} and article_status = 1
        </where>
        order by article_id
        limit 1
    </select>

    <!-- 获取上一篇文章 -->
    <select id="getPreArticle" parameterType="int" resultType="Article">
        select <include refid="Base_Column_List"/>
        from <include refid="tb"/>
        <where>
            article_id &lt; #{articleId} and article_status = 1
        </where>
        order by article_id
        limit 1
    </select>

    <!-- 随机获取文章 -->
    <select id="listRandomArticle" parameterType="int" resultType="Article">
        select <include refid="Base_Column_List"/>
        from <include refid="tb"/>
        where article_status = 1
        order by RAND()
        limit #{limit}
    </select>


</mapper>