<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuu.blog.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.yuu.blog.pojo.User">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_pass" property="userPass" jdbcType="VARCHAR"/>
        <result column="user_nickname" property="userNickname" jdbcType="VARCHAR"/>
        <result column="user_email" property="userEmail" jdbcType="VARCHAR"/>
        <result column="user_url" property="userUrl" jdbcType="VARCHAR"/>
        <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR"/>
        <result column="user_last_login_ip" property="userLastLoginIp" jdbcType="VARCHAR"/>
        <result column="user_register_time" property="userRegisterTime" jdbcType="TIMESTAMP"/>
        <result column="user_last_login_time" property="userLastLoginTime" jdbcType="TIMESTAMP"/>
        <result column="user_status" property="userStatus" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="tb">user</sql>

    <sql id="Base_Column_List">
    user_id, user_name, user_pass, user_nickname, user_email, user_url, user_avatar, 
    user_last_login_ip, user_register_time, user_last_login_time, user_status
  </sql>

    <!-- 添加用户 -->
    <insert id="insertUser" parameterType="User">
        insert into <include refid="tb"/>
        (user_name, user_pass, user_nickname,
          user_email, user_url, user_avatar,
          user_last_login_ip, user_register_time,
          user_last_login_time, user_status)
        values (#{userName}, #{userPass}, #{userNickname},
                #{userEmail}, #{userUrl}, #{userAvatar},
                #{userLastLoginIp}, now(),
                #{userLastLoginTime}, #{userStatus})
    </insert>

    <!-- 删除用户 -->
    <delete id="deleteById" parameterType="int">
        delete from <include refid="tb"/>
        where user_id = #{userId}
    </delete>

    <!-- 根据用户名获取用户信息 -->
    <select id="getUserByUsername" resultMap="BaseResultMap" parameterType="string">
        select
        <include refid="Base_Column_List"/>
        from <include refid="tb"/>
        where user_name = #{username}
    </select>

    <!-- 获取用户列表 -->
    <select id="listUser" resultType="User">
        select <include refid="Base_Column_List"/>
        from <include refid="tb"/>
    </select>

    <!-- 根据 ID 获取用户信息 -->
    <select id="getUser" resultType="User">
        select <include refid="Base_Column_List"/>
        from <include refid="tb"/>
        where user_id = #{userId}
    </select>

    <!-- 根据邮箱获取用户 -->
    <select id="getUserByEmail" resultType="User">
        select <include refid="Base_Column_List"/>
        from <include refid="tb"/>
        where user_email = #{userEmail}
    </select>

    <!-- 更新用户信息 -->
    <update id="update" parameterType="com.yuu.blog.pojo.User">
        update
        <include refid="tb"/>
        <set>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="userPass != null">user_pass = #{userPass},</if>
            <if test="userNickname != null">user_nickname = #{userNickname},</if>
            <if test="userEmail != null">user_email = #{userEmail},</if>
            <if test="userUrl != null">user_url = #{userUrl},</if>
            <if test="userAvatar != null">user_avatar = #{userAvatar},</if>
            <if test="userLastLoginIp != null">user_last_login_ip = #{userLastLoginIp},</if>
            <if test="userRegisterTime != null">user_register_time = #{userRegisterTime},</if>
            <if test="userLastLoginTime != null">user_last_login_time = #{userLastLoginTime},</if>
            <if test="userStatus != null">user_status = #{userStatus},</if>
        </set>
        where user_id = #{userId}
    </update>


</mapper>